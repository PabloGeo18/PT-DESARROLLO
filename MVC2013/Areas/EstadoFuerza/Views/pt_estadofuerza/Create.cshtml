@model MVC2013.Models.pt_estadofuerza

@{
    ViewBag.Title = "Crear Registro";
    Layout = "~/Areas/EstadoFuerza/Views/Shared/_Layout.cshtml";
}

<h2>@ViewBag.Title</h2>

@using (Html.BeginForm()) 
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
        <h4>Estado de Fuerza</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.ptempleadoid, "ptempleadoid", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("ptempleadoid", null, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.ptempleadoid, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ptubicacionid, "ptubicacionid", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("ptubicacionid", null, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.ptubicacionid, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.pttipoid, "pttipoid", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("pttipoid", null, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.pttipoid, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.estado, "estado", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("estado", null, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.estado, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.fecha, "fecha", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.fecha, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.fecha, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.observaciones, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.observaciones, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.observaciones, "", new { @class = "text-danger" })
            </div>
        </div>




        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Crear" class="btn btn-success" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Regresar al listado", "Index", null, new { @class = "btn btn-primary btn-sm" })
</div>
@section Scripts {
<script type="text/javascript">

    $(document).ready(function () {
        $('#fecha').datetimepicker({
            format: 'DD/MM/YYYY'
        });

        /* fix the chrome problem */
        
        $.validator.addMethod("date",
        function (value, element) {
            return this.optional(element) || parseDate(value, "dd-MM-yyyy") !== null;
        });
        
    });


</script>
}