@model IEnumerable<MVC2013.Models.pt_estadofuerza>

@{
    ViewBag.Title = "Detalle de Estado de Fuerza";
    Layout = "~/Areas/EstadoFuerza/Views/Shared/_Layout.cshtml";
    DateTime dateFrom = ViewBag.dateFrom;
    DateTime dateTo = ViewBag.dateTo;
    var empleados = (IEnumerable<SelectListItem>)ViewBag.ptempleadoid;
    IEnumerable<MVC2013.Models.fn_detalle_estado_fuerza_dia_Result> estadof = (IEnumerable<MVC2013.Models.fn_detalle_estado_fuerza_dia_Result>)ViewBag.estadof;

    
    
}


<div class="row">
    <div class="col-md-12 col-lg-12 col-sm-12 col-xs-12">
        @using (Html.BeginForm("Index", "pt_estadofuerza", FormMethod.Get, new { @class = "form-inline" }))
        {
            <input placeholder="Fecha desde..." type="text" id="dateFrom" name="dateFrom" class="form-control" />
            <input placeholder="Fecha hasta..." type="text" id="dateTo" name="dateTo" class="form-control" />
            @Html.DropDownList("id_empleado", empleados.ToList(), "Selecione un Empleado", new { htmlAttributes = new { @class = "form-control" } });
            <button type="submit" class="btn btn-sm btn-success" id="generar" data-loading-text="Generando...">
                <span class="glyphicon glyphicon-ok"></span>&nbsp;Consultar
            </button>
        }
    </div>
</div>

<div class="row">
    <div class="col-lg-12 col-md-12 col-xs-12 col-sm-12">



        <h2>@ViewBag.Title del @dateFrom.ToShortDateString()  al @dateTo.ToShortDateString()</h2>
        <p>
            @Html.ActionLink("Crear Nuevo", "Create", null, new { @class = "btn btn-success btn-sm" })
        </p>
        <div class="table-responsive">
            <table class="table table-striped table-responsive" id="estadosf">
                <tr>
                    <th>Codigo Empleado</th>
                    <th>Nombre Empleado</th>
                    <th>Cliente</th>
                    <th>Razon Social</th>
                    <th>Ubicacion</th>
                    <th>Tipo de Servicio</th>
                    <th>Estado</th>
                    <th>Observaciones</th>
                    <th>Fecha</th>
                    <th width="220px">Opciones</th>
                </tr>
                <tr>
                    <td>
                        <input name="fEmpleado" id="fEmpleado" type="text" />
                    </td>
                    <td>
                        <input name="fNombre" id="fNombre" type="text" />
                    </td>
                    <td>
                        <input name="fCliente" id="fCliente" type="text" />
                    </td>
                    <td>
                        <input name="fRazon" id="fRazon" type="text" />
                    </td>
                    <td>
                        <input name="fUbicacion" id="fUbicacion" type="text" />
                    </td>
                    <td>
                        <input name="fTiposervicio" id="fTiposervicio" type="text" />
                    </td>
                    <td>
                        <input name="fEstado" id="fEstado" type="text" />
                    </td>
                    <td>&nbsp;</td>
                    <td>&nbsp;</td>
                    <td>&nbsp;</td>
                </tr>

                @foreach (var item in estadof.OrderBy(x=> x.id_empleado).ToList())
                {
                    <tr>
                        <td class ="cEmpleado">
                            @item.id_empleado
                        </td>
                        <td class="cNombre">
                            @item.nombre_empleado
                        </td>
                        <td class="cCliente">
                            @item.nombre_cliente
                        </td>
                        <td class="cRazon">
                            @item.razon_social
                        </td>
                        <td class="cUbicacion">
                            @item.ubicacion
                        </td>
                        <td class="cTiposervicio">
                            @item.tipo_servicio
                        </td>
                        <td class="cEstado">
                            @item.estado
                        </td>

                        <td>
                            @item.observaciones 
                        </td>
                        <td>
                            @DateTime.Parse(item.fecha.ToString()).ToShortDateString()
                        </td>
                        <td>
                            @Html.ActionLink("Editar", "Edit", new { id = item.id_estado_fuerza }, new { @class = "btn btn-primary  btn-sm" }) 
                            @Html.ActionLink("Detalles", "Details", new { id = item.id_estado_fuerza }, new { @class = "btn btn-info btn-sm" }) 
                            @Html.ActionLink("Eliminar", "Delete", new { id = item.id_estado_fuerza }, new { @class = "btn btn-danger btn-sm" })
                        </td>
                    </tr>
                }

            </table>

        </div>
    </div>
    </div>
        @section Scripts {
            <script src="@Url.Content("~/Scripts/jquery.equalheights.min.js")"></script>
            <script>
        $(function () {
            $(".equal-height").equalHeights();
            $("#dateTo").datetimepicker({
                format: "DD/MM/YYYY"
            });
            $("#dateFrom").datetimepicker({
                format: "DD/MM/YYYY"
            });
            $("#generar, #prev, #next").click(function () {
                $(this).button('loading');
            });
        });
            </script>

    <script>
    $(function () {
        $("#estadosf").filterByMultiColumn([
            {
                field: "fEmpleado",
                filterClass: "cEmpleado"
            },
            {
                field: "fNombre",
                filterClass: "cNombre"
            },
            {
                field: "fCliente",
                filterClass: "cCliente"
            },
            {
                field: "fRazon",
                filterClass: "cRazon"
            },
            {
                field: "fTiposervicio",
                filterClass: "cTiposervicio"
            },
            {
                field: "fEstado",
                filterClass: "cEstado"
            },
            {
                field: "fUbicacion",
                filterClass: "cUbicacion"
            }
        ]);
    });
    </script>


        }
